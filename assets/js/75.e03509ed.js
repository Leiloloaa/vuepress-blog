(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{535:function(t,s,n){"use strict";n.r(s);var a=n(35),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"mini-vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mini-vue"}},[t._v("#")]),t._v(" mini-vue")]),t._v(" "),n("h2",{attrs:{id:"学习-mini-vue-带给你什么好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#学习-mini-vue-带给你什么好处"}},[t._v("#")]),t._v(" 学习 mini-vue 带给你什么好处？")]),t._v(" "),n("p",[t._v("mini-vue 课程给我的最大好处有几点：")]),t._v(" "),n("ul",[n("li",[t._v("阅读源码不费劲")]),t._v(" "),n("li",[t._v("代码能力提升")]),t._v(" "),n("li",[t._v("扩展了知识系统")])]),t._v(" "),n("p",[t._v("首先，mini-vue 是实现了 Vue3 的核心逻辑，除掉了繁琐的边缘情况，学完几节，你再去看源码，会发现，你好像会自动略过一些代码径直的找到核心的代码；其次，实现的过程中，你可以学到很多解决问题的艺术，称之为权衡的艺术，你可以这样实现也可以那样实现，但是由于考虑到性能以及维护性就要这样实现。还有如TPP这样的思想：先去实现特定行为，然后再重构成通用行为。这也是特性到共性的一种体现。再者，源码的学习会带给你一些底层的思维，如 diff 算法，为了让更新尽可能小，会先双端对比，然后再通过最长递增子序列，将改变达到最小。以上所说的你都能够在 mini-vue 的课程中学到，并且还可以生成自己的 mini-vue。")]),t._v(" "),n("p",[n("strong",[t._v("TPP 思想")])]),t._v(" "),n("p",[t._v("特定行为 => 通用行为，这是也是从特性到共性的过程")]),t._v(" "),n("p",[t._v("比如再实现 emit 触发事件的时候，传入的参数可能是 add，但是再处理事件的时候要是 onAdd 驼峰的形式，所以开头要先变成大写，然后再加上 on，或者当用户使用 - 传入方法名时，需要将横杠后面的首字母大写，再加上 on。这也是为能处理 onClick 、 onMouseenter 等等这些的共同特征。")]),t._v(" "),n("h2",{attrs:{id:"说说响应式原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说说响应式原理"}},[t._v("#")]),t._v(" 说说响应式原理？")]),t._v(" "),n("p",[t._v("回答思路：")]),t._v(" "),n("ul",[n("li",[t._v("什么是响应式？\n"),n("ul",[n("li",[t._v("响应式就是能够使数据变化可以被检测到并对这种变化做出响应机制")]),t._v(" "),n("li",[t._v("MVVM 框架中要解决的一个核心问题是连接数据层和视图层，通过数据驱动应用，数据变化，视图更新，要做到这一点就需要对数据响应式处理，这样数据一旦发生变化就可以立即做出更新处理")])])]),t._v(" "),n("li",[t._v("Vue3 的响应式是怎么实现的？比 Vue2 有哪些优缺点？\n"),n("ul",[n("li",[t._v("Vue2 是利用 Object.defineProperty() 进行劫持")]),t._v(" "),n("li",[t._v("Object.defineProperty() 对于新增或者删除属性时不会触发响应，虽然提供了 Vue.set/delete 这样的 API 完善对象的响应，但还是不完美")]),t._v(" "),n("li",[t._v("Vue3 则是通过 es6 的 Proxy 实现数据的代理，Proxy 多达13种代理方法，能够解决 Vue2 中存在的技术债")]),t._v(" "),n("li",[t._v("Object.defineProperty() 是直接操作原始数据，而 Proxy 是返回了一个新的对象")])])])]),t._v(" "),n("p",[t._v("mini-vue 呢去除了很多复杂的情况，例如针对 对象来说 没有去考虑 添加、增加和删除对 for...in 操作的影响，以及数组修改长度或间接的修改 length 触发响应式还有 set、map、WeakMap 和 WeakSet 的响应式，这些在 Vue 中都做了特定的处理，而 mini-vue 只实现了基本的对象响应式，并且没有考虑 for...in 的影响。")]),t._v(" "),n("h2",{attrs:{id:"说一说你对声明式和命令式的理解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一说你对声明式和命令式的理解"}},[t._v("#")]),t._v(" 说一说你对声明式和命令式的理解")]),t._v(" "),n("ul",[n("li",[t._v("定义")]),t._v(" "),n("li",[t._v("例子")])]),t._v(" "),n("p",[t._v("最直观的感受，声明式框架可以让我们直接调用封装好的 api 框架底层会帮我们去实现，而命令式框架则是要通过底层命令的方式去实现。")]),t._v(" "),n("p",[t._v("Vue 和 React 都是声明式框架，像 Jquery 去像是命令式框架")]),t._v(" "),n("p",[t._v("声明式框架可读性和可维护性会比较好，而命令式框架的性能会比较高，因为声明式框架相当于是套了一个壳")]),t._v(" "),n("h2",{attrs:{id:"虚拟-dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom"}},[t._v("#")]),t._v(" 虚拟 dom")]),t._v(" "),n("ul",[n("li",[t._v("定义")]),t._v(" "),n("li",[t._v("场景 要在特定的环境下去讨论虚拟 dom 的性能")]),t._v(" "),n("li",[t._v("优劣")]),t._v(" "),n("li",[t._v("权衡艺术")])]),t._v(" "),n("p",[t._v("构建上下文场景再说出虚拟 dom 和 操作 DOM")]),t._v(" "),n("p",[t._v("虚拟 dom 是指利用 js 对象去描述 dom，在用户更新的时候进行差异化更新。在性能方面，虚拟 dom 绝大多数要比直接操作 dom 性能要差，但是直接操作 dom 的心智负担会更重，可维护性不强。相较于使用 innerHTML 去更新模板，虚拟 dom 能够做到差异化更新，而 innerHTML 却只能全量替换，对于一些改动小的情况来说，性能就比较差了。不过总的来说，虚拟 dom 的优势还是比较明显，能获取较好的性能的同时，可读性和可维护性也比较好。")]),t._v(" "),n("p",[t._v("Vue3 的 虚拟 dom 限制在了组件级别，而 React 的虚拟 dom 是一颗大树。所以 React 需要 fiber，Vue3 则不需要。")]),t._v(" "),n("h2",{attrs:{id:"谈一谈-vue2-和-vue3-的-vnode-对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#谈一谈-vue2-和-vue3-的-vnode-对象"}},[t._v("#")]),t._v(" 谈一谈 Vue2 和 Vue3 的 vnode 对象")]),t._v(" "),n("ul",[n("li",[t._v("Vue2 的 vnode 对象是用来描述组件树的相关信息，它有组件的一整颗树的信息")]),t._v(" "),n("li",[t._v("Vue3 的 vnode 对象是描述节点的相关信息，没有一整颗树树的信息，一整颗树的信息储存在 substree 中，而 substree 的作用就是以某一个 vnode 为起始点，串联包含的 vnode 对象，然后进行渲染")])]),t._v(" "),n("p",[t._v("在 Vue 3 中，vnode（Virtual Node，虚拟节点）和 subtree（子树）是两个与渲染和更新视图相关的概念。\nvnode 是 Vue 3 中用于表示组件、元素或文本等在虚拟 DOM 中的节点的对象。它描述了节点的类型、属性、子节点以及其他与节点相关的信息。vnode 可以被创建、更新和销毁，它们用于构建和表示整个应用程序的视图层次结构。\nsubtree 是指以某个 vnode 为根节点的整个节点子树。在 Vue 3 中，subtree 是用于组件渲染和更新的基本单元。当组件的状态发生变化时，Vue 3 会重新渲染该组件的 subtree，然后对比新旧 subtree，只更新发生变化的部分，从而提高渲染性能。\n换句话说，vnode 是一个节点的抽象表示，它可以表示一个具体的组件、元素或文本节点，而 subtree 是由 vnode 组成的一个完整的节点子树，用于表示组件的渲染和更新单元。通过使用 vnode 和 subtree，Vue 3 可以更高效地进行视图的更新，只更新发生变化的部分，而不需要重新渲染整个视图。")]),t._v(" "),n("p",[t._v("在 Vue 2 中，vnode（Virtual Node，虚拟节点）和 subtree（子树）也是用于渲染和更新视图的重要概念，但与 Vue 3 中有一些区别。\n在 Vue 2 中，vnode 是用于表示组件、元素或文本等在虚拟 DOM 中的节点的对象，类似于 Vue 3 中的概念。vnode 描述了节点的类型、属性、子节点等信息，并且可以通过创建、更新和销毁 vnode 来构建和表示整个应用程序的视图层次结构。\n然而，在 Vue 2 中，subtree 的概念并没有像在 Vue 3 中那样显式地提出。相反，Vue 2 使用了组件实例树的概念来表示组件的渲染和更新单元。组件实例树是由组件实例构成的，每个组件实例都有自己的 vnode 树，并负责管理自己的子组件实例。当组件的状态发生变化时，Vue 2 会重新渲染组件实例树，并通过对比新旧树来更新视图。\n因此，在 Vue 2 中，可以将组件实例树看作是一个 subtree，其中的每个组件实例都有自己的 vnode 树，并且在组件级别进行渲染和更新。\n总结而言，Vue 2 中的 vnode 是表示虚拟节点的对象，用于构建和表示视图层次结构。而 subtree 的概念则隐含在组件实例树中，用于表示组件的渲染和更新单元，每个组件实例都具有自己的 vnode 树。")]),t._v(" "),n("h2",{attrs:{id:"运行时和编译时"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行时和编译时"}},[t._v("#")]),t._v(" 运行时和编译时")]),t._v(" "),n("p",[t._v("运行时是指直接能够运行的代码，而编译时是需要通过编译器去解析然后才能运行。")]),t._v(" "),n("h2",{attrs:{id:"说说-diff-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说说-diff-算法"}},[t._v("#")]),t._v(" 说说 diff 算法？")]),t._v(" "),n("p",[t._v("diff 算法，在 Vue 中表示对比新老节点，找出最小差异进行更新。Vue3 的 diff 算法是采取了先双端对比，再通过最长递增子序列算法找出最小差异。")]),t._v(" "),n("p",[t._v("Vue3的diff对比Vue2的优化部分\nVue2 是全量 Diff（当数据发生变化，它就会新生成一个DOM树，并和之前的DOM树进行比较，找到不同的节点然后更新。）；Vue3 是静态标记 + 非全量 Diff（Vue 3在创建虚拟DOM树的时候，会根据DOM中的内容会不会发生变化，添加一个静态标记。之后在与上次虚拟节点进行对比的时候，就只会对比这些带有静态标记的节点。）\n使用最长递增子序列优化对比流程，可以最大程度的减少 DOM 的移动，达到最少的 DOM 操作")]),t._v(" "),n("h2",{attrs:{id:"vue3-的-diff-算法为什么采用了四个指针比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue3-的-diff-算法为什么采用了四个指针比较"}},[t._v("#")]),t._v(" Vue3 的 diff 算法为什么采用了四个指针比较？")]),t._v(" "),n("p",[t._v("算法一定要针对特定的场景优化，常见的 web 项目，大多数变动情况是开头变或者结尾变或者中间变，通过四个指针就可以确定新老结点变动的范围。也可以采用三个指针，i、e1、e2，i 指向新树结点从 0 开始，e1 指向老树结点末端 n1.length - 1，e2 指向新树结点末端 n2.length -1；先通过一个 while 循环移动 e1 和 e2，如果结点不相等就 break 跳出当前循环，再通过一个 while 循环移动 i 指针，如果结点不相等就 break，这样就确定了变动的区间。")]),t._v(" "),n("h2",{attrs:{id:"为什么不推荐用-index-作为-key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么不推荐用-index-作为-key"}},[t._v("#")]),t._v(" 为什么不推荐用 index 作为 key？")]),t._v(" "),n("p",[t._v("因为 vue3 在 diff 算法的时候，会优先判断是否存在 key 然后再判断是否节点可复用，如果 index 作为 key，那么就失去了 index 作为 key 的意义，因为 index 总是递增的。")]),t._v(" "),n("h2",{attrs:{id:"watch-与-computed-的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#watch-与-computed-的实现"}},[t._v("#")]),t._v(" watch 与 computed 的实现？")]),t._v(" "),n("p",[t._v("computed 和 watch 都是通过 effect 的第二个参数调度器传入不同的标识实现；")]),t._v(" "),n("ul",[n("li",[t._v("computed 计算属性就是执行了一个副作用函数，通过 lazy 选项使得副作用函数可以懒执行。当计算属性依赖的响应式数据发生变化时，会通过 scheduler 将 dirty 标记为 true，代表“脏”，下次读取计算属性的值时，重新计算真正的值。")]),t._v(" "),n("li",[t._v("watch 是利用副作用函数执行时的可调度性。一个 watch 本身会创建一个 effect，当这个 effect 依赖的响应式数据发生变化时，会执行该 effect 函数。通过 immediate 选项来实现")])]),t._v(" "),n("h2",{attrs:{id:"生命钩子函数有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命钩子函数有哪些"}},[t._v("#")]),t._v(" 生命钩子函数有哪些？")]),t._v(" "),n("p",[n("strong",[t._v("Vue")])]),t._v(" "),n("p",[t._v("Vue2 的生命钩子函数")]),t._v(" "),n("p",[t._v("beforeCreate -> created -> beforeMount -> mounted -> beforeUpdate -> updated -> beforeDestroy -> destroyed")]),t._v(" "),n("p",[t._v("Vue3 的生命钩子函数")]),t._v(" "),n("p",[t._v("setup -> onBeforeMount -> onMounted -> onBeforeUpdate -> onUpdated -> onBeforeUnmount -> onUnmounted")]),t._v(" "),n("p",[t._v("react 的生命钩子函数")]),t._v(" "),n("p",[t._v("componentDidMount\ncomponentDidUpdate\ncomponentWillUnmount")]),t._v(" "),n("p",[t._v("react hook 的生命钩子函数")]),t._v(" "),n("p",[t._v("useEffect 相当于 componentDidMount 和 componentWillUnmount")]),t._v(" "),n("p",[t._v("useEffect 的第二个参数")]),t._v(" "),n("h2",{attrs:{id:"说一下-vue-的初始化构建流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下-vue-的初始化构建流程"}},[t._v("#")]),t._v(" 说一下 Vue 的初始化构建流程")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" App"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("vue 会基于 rootComponent 生成 vnode 虚拟节点树，然后根据用户调用 mount 传入的容器 container，接着再调用 render 函数传入创建好的 vnode 和 mount 传入的 container。")]),t._v(" "),n("p",[t._v("其实这个 createApp 是 createAppApi 函数返回的函数，createAppApi 接收一个 render 函数，这样就实现了自定义渲染功能。")]),t._v(" "),n("p",[t._v("然后 render 函数再调用 patch 基于 vnode 的类型进行不同类型的处理。Vue3 定义了节点的类型，patch 的时候通过位运算来确定类型。")]),t._v(" "),n("p",[t._v("patch 主要传递的参数是 n1 和 n2(其他的参数例如 container、parentComponent、anchor 锚点等)，n1 表示老节点，n2 表示新节点。")]),t._v(" "),n("p",[t._v("初始化的时候 n1 为 null，解构出 n2 的 type 和 shapeFlag，通过 switch 去处理相应的操作，例如 Fragment、Text、Element、Component 等类型。")]),t._v(" "),n("p",[t._v("处理 Element 是通过 processElement，如果 n1 不存在，那么就是初始；否则就是更新；初始化调用 mountElement，更新调用 patchElement，更新的话比较麻烦，涉及到 diff 算法，双端对比算法和最长递增子序列算法得出最小差异化更新。一般情况有 4 种，text->text、text->array、array->text、array->array，diff 算法用在第四种。")]),t._v(" "),n("p",[t._v("处理 Component 是通过 processComponent，挂载组件就会创建一个组件实例 instance 然后再处理 setup 中的返回的对象，比如使用 proxyRefs 拆箱。更新组件调用 updateComponent，因为要实现响应式，所以在 mountComponent 的时候要使用到 effect 副作用函数收集依赖，并且挂载到实例的 update 函数上。并且组件更新是异步的，通过 effect 的第二个参数创建一个 微任务 队列，同步任务完成才会更新，这也是 nextTick 的实现逻辑。")]),t._v(" "),n("p",[t._v("自此，初始化与更新逻辑大概就是这么个流程。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAppApi")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rootComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("container")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根节点创建一个 虚拟dom")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createVNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rootComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 render 函数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRenderer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n1 是老dom树，n2 是新dom树")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解构出 type 和 shapeFlag 从 n2 中")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type 则是 fragment 或者是 text 这些")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// shapeFlag 则是判断是 element 还是 component")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("shapeFlag "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n2\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Fragment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 mountChildren 去遍历挂载")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" Text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建文本 添加到 container 中就可以了")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processText")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shapeFlag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" shapeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ELEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shapeFlag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" shapeFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processElement")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新就要对比")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchElement")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里就涉及到了 diff 算法 双端对比 及 最长递增子序列")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载组件 就会创建一个 组件实例 instance 然后再处理 setup 中的放回对象 比如使用 proxyRefs 拆箱")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是要更新组件 所以在 mountComponent 的时候 要使用到 effect 将收集更新依赖 变得时候就会去触发依赖")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用实例上的 update 方法")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("component "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("component"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用 patch 根据 shapeFlags 去处理")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    createApp"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createAppApi")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("render"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br")])]),n("h2",{attrs:{id:"为什么博客是静态的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么博客是静态的"}},[t._v("#")]),t._v(" 为什么博客是静态的？")]),t._v(" "),n("p",[t._v("如果博客是动态，我需要考虑数据库和服务器的问题；虽然静态博客自己写了文章之后，需要打包编译，没有动态的那么方便。正好在搭建的时候，发现了 Vuepress，然后动态博客这是就拖后了。也感觉目前应该将主要精力放置于前端。静态资源可以放置于 cdn 上，这样访问也更快。")])])}),[],!1,null,null,null);s.default=e.exports}}]);