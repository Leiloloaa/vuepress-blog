(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{540:function(t,s,r){"use strict";r.r(s);var e=r(35),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),r("p",[t._v("万事开头难，确定了方向，就蒙着眼大踏步的往前迈一步，然后继续努力！我们要一直向前走，凡是过往，皆为序章；只有不断的努力，才能实现更美好的生活！一定要自律呀！")]),t._v(" "),r("p",[t._v("常考的知识点：")]),t._v(" "),r("ul",[r("li",[t._v("标签的一些问题")]),t._v(" "),r("li",[t._v("script 的加载问题")]),t._v(" "),r("li",[t._v("HTML5 的一些新特性")])]),t._v(" "),r("h2",{attrs:{id:"说说-title-和-alt-属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#说说-title-和-alt-属性"}},[t._v("#")]),t._v(" 说说 title 和 alt 属性")]),t._v(" "),r("ul",[r("li",[t._v("两个属性都是当鼠标滑动到元素上的时候显示")]),t._v(" "),r("li",[t._v("alt 是 img 的特有属性，是图片内容的等价描述，"),r("strong",[t._v("图片无法正常显示时候的替代文字")]),t._v("。")]),t._v(" "),r("li",[t._v("title 属性可以用在除了base，basefont，head，html，meta，param，script和title之外的所有标签，"),r("strong",[t._v("是对dom元素的一种类似注释说明")]),t._v("，")])]),t._v(" "),r("h2",{attrs:{id:"src-与-href-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#src-与-href-的区别"}},[t._v("#")]),t._v(" src 与 href 的区别")]),t._v(" "),r("ul",[r("li",[t._v("src 用于替换当前元素，href用于在当前文档和引用资源之间确立联系。")]),t._v(" "),r("li",[t._v("src 是 source 的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求 src 资源时会将其指向的资源下载并应用到文档内，例如 js 脚本，img 图片和 frame 等元素")])]),t._v(" "),r("blockquote",[r("p",[t._v("当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部")])]),t._v(" "),r("ul",[r("li",[t._v('href 是 Hypertext Reference 的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接，如果我们在文档中添加link href="common.css" rel="stylesheet" 那么浏览器会识别该文档为 css 文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用 link 方式来加载 css ，而不是使用 @import 方式')])]),t._v(" "),r("h2",{attrs:{id:"每个-html-文件里开头都有个很重要的东西-doctype-是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#每个-html-文件里开头都有个很重要的东西-doctype-是什么"}},[t._v("#")]),t._v(" 每个 HTML 文件里开头都有个很重要的东西，Doctype 是什么？")]),t._v(" "),r("blockquote",[r("p",[t._v("声明位于文档中的最前面的位置，处于标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。（重点：告诉浏览器按照何种规范解析页面）")])]),t._v(" "),r("h2",{attrs:{id:"script-标签为什么要放在底部"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#script-标签为什么要放在底部"}},[t._v("#")]),t._v(" script 标签为什么要放在底部")]),t._v(" "),r("p",[t._v("这能确保在脚本执行前页面已经完成了DOM树渲染。")]),t._v(" "),r("h2",{attrs:{id:"defer-和-async-的区别-以及它们的加载和执行时机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#defer-和-async-的区别-以及它们的加载和执行时机"}},[t._v("#")]),t._v(" defer 和 async 的区别，以及它们的加载和执行时机")]),t._v(" "),r("p",[t._v("1、"),r("code",[t._v('<script async src="script.js"><\/script>')]),t._v("：给script标签加async属性，则加载和渲染后续文档元素的过程将和 script.js 的加载与执行并行进行（异步）\n2、"),r("code",[t._v('<script defer src="script.js"><\/script>')]),t._v("：给script标签加defer属性，加载后续文档元素的过程将和 script.js 的加载并行进行（异步），但是 script.js 的执行要在所有元素解析完成之后，DOMContentLoaded 事件触发之前完成")]),t._v(" "),r("h2",{attrs:{id:"html-w3c的标准"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html-w3c的标准"}},[t._v("#")]),t._v(" HTML W3C的标准")]),t._v(" "),r("blockquote",[r("p",[t._v("标签闭合、标签小写、不乱嵌套、使用外链 css 和 js 、结构行为表现的分离")])])])}),[],!1,null,null,null);s.default=a.exports}}]);