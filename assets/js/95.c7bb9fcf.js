(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{556:function(s,t,a){"use strict";a.r(t);var n=a(35),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"vue进阶题c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue进阶题c"}},[s._v("#")]),s._v(" Vue进阶题c")]),s._v(" "),a("p",[s._v("对于有把握的事情，我们要谨慎面对；对于没有把握的事情，我们要微笑面对；")]),s._v(" "),a("ul",[a("li",[s._v("位运算 shapeFlag")]),s._v(" "),a("li",[s._v("对于 Vue3 的计算属性 computed 该如何理解")])]),s._v(" "),a("h2",{attrs:{id:"位运算-shapeflag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算-shapeflag"}},[s._v("#")]),s._v(" 位运算 shapeFlag")]),s._v(" "),a("p",[s._v("使用位运算，运算效率快。")]),s._v(" "),a("p",[s._v("按位与 & 都为 1 才为 1\n按位或 | 有 1 就为 1\n按位异或 ^ 相同为 0 不同为 1\n"),a("code",[s._v("<<")]),s._v(" 左移 相当于乘以 2\n"),a("code",[s._v(">>")]),s._v(" 右移 正数最高位补 0 负数最高位补 0 或 1 (补 0 是逻辑右移 补 1 是算术右移)")]),s._v(" "),a("p",[s._v("Vue3 中的 element、component 等都是通过 1 左移得来的。所以在判断 shapeFlag 的时候不等于自身的数全为 0")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" ShapeFlags "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ELEMENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FUNCTIONAL_COMPONENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("STATEFUL_COMPONENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TEXT_CHILDREN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARRAY_CHILDREN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SLOTS_CHILDREN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TELEPORT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SUSPENSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_SHOULD_KEEP_ALIVE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT_KEPT_ALIVE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("COMPONENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ShapeFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("STATEFUL_COMPONENT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" ShapeFlags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FUNCTIONAL_COMPONENT")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"vue-单页面应用无刷新更新组件怎么实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-单页面应用无刷新更新组件怎么实现的"}},[s._v("#")]),s._v(" vue 单页面应用无刷新更新组件怎么实现的")]),s._v(" "),a("p",[s._v("题目转换为 vue-router 两种模式下如何实现的 url 到组件的映射")]),s._v(" "),a("h3",{attrs:{id:"hash模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash模式"}},[s._v("#")]),s._v(" hash模式")]),s._v(" "),a("p",[s._v("hash模式是vue-router的默认模式。hash指的是url描点，"),a("strong",[s._v("当描点发生变化的时候，浏览器只会修改访问历史记录，不会访问服务器重新获取页面")]),s._v("。因此可以监听描点值的变化，根据描点值渲染指定dom。")]),s._v(" "),a("p",[a("strong",[s._v("改变描点")])]),s._v(" "),a("p",[s._v('可以通过location.hash = "/hashpath"的方式修改浏览器的hash值。')]),s._v(" "),a("p",[a("strong",[s._v("监听描点变化")])]),s._v(" "),a("p",[s._v("可以通过监听hashchange事件监听hash值的变化。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hashchange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据hash值渲染不同的dom")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"history模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history模式"}},[s._v("#")]),s._v(" history模式")]),s._v(" "),a("p",[s._v("通过mode选项开启history模式，history 模式和 hash 模式的区别在于：")]),s._v(" "),a("p",[s._v("history模式中不带有“#”，更加美观\n"),a("strong",[s._v("history模式当用户刷新或直接输入地址时会向服务器发送一个请求")]),s._v("，所以history模式需要服务端同学进行支持，将路由都重定向到根路由")]),s._v(" "),a("p",[a("strong",[s._v("改变url")])]),s._v(" "),a("p",[s._v("H5的history对象提供了pushState和replaceState两个方法，当调用这两个方法的时候，url会发生变化，浏览器访问历史也会发生变化，但是浏览器不会向后台发送请求。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第一个参数：data对象，在监听变化的事件中能够获取到")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第二个参数：title标题")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 第三个参数：跳转地址")]),s._v("\nhistory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("监听url变化")])]),s._v(" "),a("p",[s._v("可以通过监听popstate事件监听history变化，也就是点击浏览器的前进或者后退功能时触发。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"popstate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("location"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("pathname\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据path不同可渲染不同的dom")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v('从某种程度来说，调用 pushState() 和 window.location = "#foo"基本上一样，他们都会在当前的 document 中创建和激活一个新的历史记录。但是 pushState() 有以下优势：')]),s._v(" "),a("p",[s._v('新的 URL 可以是任何和当前 URL 同源的 URL。但是设置 window.location 只会在你只设置锚的时候才会使当前的 URL。\n非强制修改 URL。相反，设置 window.location = "#foo"; 仅仅会在锚的值不是 #foo 情况下创建一条新的历史记录。\n可以在新的历史记录中关联任何数据。window.location = "#foo"形式的操作，你只可以将所需数据写入锚的字符串中。')]),s._v(" "),a("blockquote",[a("p",[s._v("注意： pushState() 不会造成 hashchange 事件调用，即使新的 URL 和之前的 URL 只是锚的数据不同。----MDN")])]),s._v(" "),a("h3",{attrs:{id:"vue-router-中-router-和-route-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-中-router-和-route-的区别"}},[s._v("#")]),s._v(" vue-router 中 router 和 route 的区别")]),s._v(" "),a("ul",[a("li",[s._v("router 是路由实例对象，包含一些路由跳转方法，比如 push。")]),s._v(" "),a("li",[s._v("route 是路由信息对象，包含和路由相关的一些信息，比如 params,location等。")])]),s._v(" "),a("h3",{attrs:{id:"前端的缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端的缓存机制"}},[s._v("#")]),s._v(" 前端的缓存机制")]),s._v(" "),a("p",[a("strong",[s._v("分为强缓存和协商缓存")]),s._v("。")]),s._v(" "),a("p",[s._v("强缓存不需要客户端向服务端发送请求，有两种响应头实现方案：")]),s._v(" "),a("ul",[a("li",[s._v("Expires：值是一个绝时间，在这个时间前缓存有效，但是如果本地时间被修改，会导致缓存失效")]),s._v(" "),a("li",[s._v("Cache-control：值是一个相对时间，单位为秒，资源在这个时间内有效")])]),s._v(" "),a("p",[s._v("强缓存过期之后会使用协商缓存，协商缓存需要客户端向服务端发送请求，资源未过期则服务端返回304否则返回新的资源。")]),s._v(" "),a("p",[s._v("协商缓存也有两种实现方案：")]),s._v(" "),a("ul",[a("li",[s._v("Last-Modified 和 If-Modified-Since：Last-Modified 表示本地文件最后修改日期，If-Modified-Since 会将 Last-Modified 的值发送给服务器，询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来。但是如果本地文件被打开，会导致Last-Modified 被修改。")]),s._v(" "),a("li",[s._v("ETag 和 If-None-Match：ETag 类似于文件指纹，If-None-Match 会将当前 ETag 发送给服务器，询问该资源 ETag 是否变动，有变动的话就将新的资源发送回来。并且 ETag 优先级比 Last-Modified 高。")])]),s._v(" "),a("h2",{attrs:{id:"对于-vue3-的计算属性-computed-该如何理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于-vue3-的计算属性-computed-该如何理解"}},[s._v("#")]),s._v(" 对于 Vue3 的计算属性 computed 该如何理解")]),s._v(" "),a("ul",[a("li",[s._v("延迟计算，只有我们访问计算属性的时候，它才会真正执行 computed getter 函数进行计算\n"),a("ul",[a("li",[s._v("依赖的响应式值发生了变化，只是把 _dirty 变为了 true，计算属性不会立即更新，只有当计算属性再次被访问的时候才会重新计算值")])])]),s._v(" "),a("li",[s._v("缓存，它内部会缓存上次的计算结果 _value，而且只有 _dirty 为 true 时才会重新计算")])]),s._v(" "),a("p",[s._v("计算属性的优势是：只要它依赖的响应式数据不变化，就可以使用缓存的 _value，而不用每次渲染组件时都执行函数进行计算，这是典型的空间换时间的优化思想。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("computed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("内部实现简要：computed 内部会有一个 _dirty 属性表示是否为脏数据为 true 的时候才会更新。第一次 _dirty 为 true 所以会执行一次，求得 computed 再把 _dirty 变为 false，同时建立一个 effect，传入调度器函数。在这个过程中产生了两个不同的依赖。b 的依赖是 computed 创建的 effect，因为 a 又是响应式的值，getter 访问了所以也会收集 effect。当响应式的值 a 发生变化后，就需要去触发相关的依赖 effect。又因为 computed 在创建 effect 的时候传入了调度器函数，所以会先执行调度器函数。如果 _dirty 是 false 就变为 true 然后再派发依赖。在组件重新渲染的时候会再去访问 b，触发 getter，有因为 _dirty 是 true，所以会重新计算 b 的值。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);