(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{523:function(n,t,s){"use strict";s.r(t);var e=s(35),l=Object(e.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"前-k-个高频元素-l347"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前-k-个高频元素-l347"}},[n._v("#")]),n._v(" 前 k 个高频元素-L347")]),n._v(" "),s("p",[n._v("给你一个整数数组 nums 和一个整数 k ，请你返回其中出现频率前 k 高的元素。你可以按 任意顺序 返回答案。")]),n._v(" "),s("p",[n._v("示例 1:")]),n._v(" "),s("p",[n._v("输入: nums = [1,1,1,2,2,3], k = 2\n输出: [1,2]\n示例 2:")]),n._v(" "),s("p",[n._v("输入: nums = [1], k = 1\n输出: [1]\n提示：")]),n._v(" "),s("p",[n._v("1 <= nums.length <= 105\nk 的取值范围是 [1, 数组中不相同的元素的个数]\n题目数据保证答案唯一，换句话说，数组中前 k 个高频元素的集合是唯一的\n进阶：你所设计算法的时间复杂度 必须 优于 O(n log n) ，其中 n 是数组大小。")])])}),[],!1,null,null,null);t.default=l.exports}}]);