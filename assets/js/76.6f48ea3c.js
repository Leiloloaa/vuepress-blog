(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{536:function(t,s,a){"use strict";a.r(s);var e=a(35),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),a("h2",{attrs:{id:"vue3-深入理解从编译生成的-render-函数到更新组件的-render-函数-创建实例到页面渲染-再到更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-深入理解从编译生成的-render-函数到更新组件的-render-函数-创建实例到页面渲染-再到更新"}},[t._v("#")]),t._v(" Vue3 深入理解从编译生成的 render 函数到更新组件的 render 函数（创建实例到页面渲染，再到更新）")]),t._v(" "),a("ol",[a("li",[t._v("每个 Vue 组件都需要产出一份虚拟 DOM，也就是组件的 render 函数的返回值，render 函数可以手写，在 script 中和 setup 同级，也可以通过 template 传递模板字符串，由 Vue 内部来编译成渲染函数，平常我们写的 Vue 单文件，最终也会编译成普通的 Vue 组件选项对象")]),t._v(" "),a("li",[t._v("render 函数会作为副作用函数执行，也就是如果在模板中使用到了相应式数据，那么响应式数据的属性与 render 函数关联起来，那么当响应式数据被修改后，就能找到依赖它的 render 函数，那么久可以通知依赖的组件进行更新")]),t._v(" "),a("li",[t._v("有了虚拟 dom 之后，Vue 内部的渲染器就能将它渲染成真是的 DOM，如果是更新的情况，也就是存在新旧两个虚拟 dom，那么 Vue 会通过比较，必要时会使用 diff 算法进行高效的更新真实的 DOM")])]),t._v(" "),a("h2",{attrs:{id:"深入理解-effect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深入理解-effect"}},[t._v("#")]),t._v(" 深入理解 effect")]),t._v(" "),a("ol",[a("li",[t._v("首先 effect 是副作用函数（执行会改变别的变量，从而产生副作用）")]),t._v(" "),a("li",[t._v("Vue3 响应式中，例如 obj.text 读取改响应式时会收集改 effect，当改变时就会重新触发更新，那么收集的函数是 setup 中所有的函数吗？")]),t._v(" "),a("li",[t._v("当然不是，Vue 提供了一个 effect 机制，你可以往里面传入一个匿名函数或者具名函数（可以不叫 effect）")]),t._v(" "),a("li",[t._v("然后 vue 会拿到这个传递个 effect 的函数，收集到 text 对应的 fn set 中。这样一来，当响应式的值发生改变后，fn set 就会重新触发更新")]),t._v(" "),a("li",[t._v("vue 给用户提供的入口就是 watch、watchEffect、computed。我们自己写的函数是不会被收集的。因为当你执行这个函数会触发 get 的时候，effect 中的 activeEffect（全局变量，收集完会重置）等于 null，所以当前的函数不会被执行，至于，响应式改变后触发模板更新，是 Vue3 首次 mount 的时候，会给插值、v-if 等，打上相应的 shapeFlag，当响应式的值发生改变后，会触发组件的 render 函数，重新 patch 新老数之间的差异，然后替换更新")])]),t._v(" "),a("h2",{attrs:{id:"vite-项目开发环境快的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vite-项目开发环境快的原因"}},[t._v("#")]),t._v(" vite 项目开发环境快的原因")]),t._v(" "),a("p",[t._v("在 vue3、vite 项目，运行 npm run dev，编译过程到页面渲染中间发生了什么事？")]),t._v(" "),a("ul",[a("li",[t._v("启动开发服务器： 当你运行npm run dev时，Vite会启动一个开发服务器。")]),t._v(" "),a("li",[t._v("Vite 插件处理： Vite会检测你的项目中的文件，特别是.vue文件，然后使用相应的插件进行处理。这些插件可以将Vue文件、CSS文件等转换为浏览器可识别的格式。")]),t._v(" "),a("li",[t._v("ES Module 解析和编译： Vite使用原生的ES模块系统，通过静态分析依赖关系，仅编译当前需要的模块。这减少了整体编译的工作量。")]),t._v(" "),a("li",[t._v("模块热更新（HMR）： Vite支持模块热更新，即当你修改文件并保存时，它只会重新编译修改过的模块，然后通过HMR技术将这些更改推送到浏览器，使你能够在不刷新整个页面的情况下看到即时的效果。")]),t._v(" "),a("li",[t._v("Dev Server 启动： 开发服务器开始运行，监听文件的变化。当有文件发生变化时，Vite会触发相应的编译和热更新。")]),t._v(" "),a("li",[t._v("浏览器渲染： 当你访问应用时，浏览器会请求相关的资源，包括编译后的JavaScript文件、样式文件等。这些资源会被浏览器加载并在页面上渲染出来。")])]),t._v(" "),a("p",[t._v("整个过程中，Vite的特点是在开发环境下提供了快速的编译和热更新，使开发者能够更高效地进行前端开发。")]),t._v(" "),a("blockquote",[a("p",[t._v("执行 npm run dev，vite 项目会将 vue 等其它文件转换成在浏览器运行的文件，在这一过程中，有编译、渲染的过程")])]),t._v(" "),a("p",[t._v("编译：\ntemplate -> parse(转换成 AST) -> transform(转换成 JavaScript AST) -> generate(生成 code) -> render 函数")]),t._v(" "),a("ol",[a("li",[t._v("将 code 变成 ast 的好处？\n"),a("ol",[a("li",[t._v("AST 是一个对象，可以用来描述模板字符串")]),t._v(" "),a("li",[t._v("AST 是源代码的结构化表示，它可以帮助开发者再代码层面进行静态的分析和转换，将模板转换为 ast，编译器可以进行更高级的优化，以生成更高效的函数代码")])])]),t._v(" "),a("li",[t._v("为什么要转换成 JS AST？\n"),a("ol",[a("li",[t._v("拿到 ast 后，对其进行 transform 转换操作，比如解析 v-if、v-for 等各种指令或者对节点进行分析将满足条件的节点静态提升")])])]),t._v(" "),a("li",[t._v("生成的 code 字符串是什么？\n"),a("ol",[a("li",[t._v("code 字符串是 render 函数，可以直接渲染")])])]),t._v(" "),a("li",[t._v("为什么不直接将 template -> vnode？而是生成 render code 函数，再通过 render code 生成 vnode\n"),a("ol",[a("li",[t._v("原因在于 vue 在状态改变后，需要重新渲染视图，而 vnode 无法获得最新的状态，而 render code 本质是一个可执行的函数满足动态性")])])])]),t._v(" "),a("p",[t._v("渲染\ncreateApp -> mount -> createVNode -> render -> patch")]),t._v(" "),a("p",[a("strong",[t._v("这两个 render 函数有什么关联吗")])]),t._v(" "),a("ol",[a("li",[t._v("一个是编译时生成，一个运行是动态生成")]),t._v(" "),a("li",[t._v("没有关联，code render 可以理解为返回的是一颗 vnode 数，它内部是调用 _createTextVNode、_createElementVNode 去创建 VNode")])]),t._v(" "),a("p",[t._v("解析每个 vue 文件的时候，会返回一个 render 函数，在 mount 的时候会去执行页面的 render 函数，当生命周期依次触发的时候，响应式就会工作，会收集到组件的 render 函数，一遍响应式发生改变之后重新触发更新")]),t._v(" "),a("p",[a("strong",[t._v("看得见的思考，vue 是如何收集 render 函数，然后在响应式变化的时候触发更新呢？")])]),t._v(" "),a("p",[t._v("响应式是在 get 的时候收集，set 的时候触发对应的 fn")]),t._v(" "),a("h2",{attrs:{id:"通过-vue-来理解-运行时、编译时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-vue-来理解-运行时、编译时"}},[t._v("#")]),t._v(" 通过 Vue 来理解 运行时、编译时")]),t._v(" "),a("p",[a("strong",[t._v("为什么会存在运行时、编译时和完整形态")])]),t._v(" "),a("blockquote",[a("p",[t._v("JS 解析 HTML 字符串，然后装换成 js 代码去执行。运行时是可以直接运行的，用户提供一个 js 对象，vue 同过 render 函数就可以生产真实的 dom（UI）;编译时能直接将用户提供的 HTML 代码编译成可执行的函数;完整形态就是 template -> parse 解析 -> ast 语法树 -> compile 解析 -> render 函数 -> 生成 vdom -> ui -> 更新 diff -> ui")])]),t._v(" "),a("p",[t._v("运行时 Runtime-Only")]),t._v(" "),a("p",[t._v("只能运行用户提供的 render 函数，转换为可执行的代码，无法分析用户的行为，包的体积会很小，因为没有编译代码")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n\ttag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tchildren"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// render 函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" doucument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("boj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//递归render，使用el作为root")]),t._v("\n        obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    root"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户直接调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("doucument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[t._v("编译时 Runtime-Compiler")]),t._v(" "),a("p",[t._v("能直接将用户提供的代码编译成可执行的函数，缺点是变更后需重新编译才能能运行")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<div><span>hello vue</span></div>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" div "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" span "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'span'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello vue'")]),t._v("\ndiv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("Vue 是一个两者都包含的框架")]),t._v(" "),a("p",[t._v("用户只需要编写模板，剩下的事情交给 Vue 来做，包括编译时的代码分析（shapeFlag 静态提升、函数 cache 等），以及运行时 diff 算法。")]),t._v(" "),a("div",{staticClass:"language-JS line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" html "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<div><span>hello vue</span></div>")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Compiler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("doucument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("过程就是 template -> parse 解析 -> ast 语法树 -> compile 解析 -> render 函数 -> 生成 vdom -> ui -> 更新 diff -> ui")]),t._v(" "),a("h2",{attrs:{id:"如何控制原型链上的方法不被修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何控制原型链上的方法不被修改"}},[t._v("#")]),t._v(" 如何控制原型链上的方法不被修改")]),t._v(" "),a("h2",{attrs:{id:"如果实现行内编辑或多行编辑-element-ui-table-可以实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果实现行内编辑或多行编辑-element-ui-table-可以实现"}},[t._v("#")]),t._v(" 如果实现行内编辑或多行编辑 element ui table 可以实现")]),t._v(" "),a("h2",{attrs:{id:"组件库-vue-use-app-use-要写些什么才可能实现一个组件库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件库-vue-use-app-use-要写些什么才可能实现一个组件库"}},[t._v("#")]),t._v(" 组件库 Vue.use app.use 要写些什么才可能实现一个组件库")]),t._v(" "),a("h2",{attrs:{id:"js-里面如何获取所有的插槽"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-里面如何获取所有的插槽"}},[t._v("#")]),t._v(" JS 里面如何获取所有的插槽")]),t._v(" "),a("h2",{attrs:{id:"attr-和-lisense"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attr-和-lisense"}},[t._v("#")]),t._v(" $attr 和 $lisense")]),t._v(" "),a("h2",{attrs:{id:"打包多个引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包多个引用"}},[t._v("#")]),t._v(" 打包多个引用")]),t._v(" "),a("h2",{attrs:{id:"vue3-的-setup-的语法糖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-的-setup-的语法糖"}},[t._v("#")]),t._v(" Vue3 的 setup 的语法糖")]),t._v(" "),a("h2",{attrs:{id:"element-如何做到按需打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element-如何做到按需打包"}},[t._v("#")]),t._v(" element 如何做到按需打包")]),t._v(" "),a("p",[t._v("借助 babel-plugin-component，我们可以只引入需要的组件，以达到减小项目体积的目的")]),t._v(" "),a("h2",{attrs:{id:"如何加速-webpack-的打包进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何加速-webpack-的打包进程"}},[t._v("#")]),t._v(" 如何加速 webpack 的打包进程")]),t._v(" "),a("h2",{attrs:{id:"为什么需要使用多页面打包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要使用多页面打包"}},[t._v("#")]),t._v(" 为什么需要使用多页面打包")]),t._v(" "),a("h2",{attrs:{id:"为什么小程序的性能会比-html-的性能会好"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么小程序的性能会比-html-的性能会好"}},[t._v("#")]),t._v(" 为什么小程序的性能会比 html 的性能会好")]),t._v(" "),a("h2",{attrs:{id:"setstate-是异步的吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setstate-是异步的吗"}},[t._v("#")]),t._v(" setState 是异步的吗")]),t._v(" "),a("h2",{attrs:{id:"react-diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-diff"}},[t._v("#")]),t._v(" react diff")]),t._v(" "),a("h2",{attrs:{id:"_301-302-状态码的区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_301-302-状态码的区分"}},[t._v("#")]),t._v(" 301/302 状态码的区分")]),t._v(" "),a("p",[t._v("301 是永久重定向 例如：域名换了，然后原先的地址就会切换到新的域名\n302 是临时重定向 例如：域名被攻击，临时地址替代访问")]),t._v(" "),a("h2",{attrs:{id:"usemomo-usecallback-如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usemomo-usecallback-如何使用"}},[t._v("#")]),t._v(" useMomo/useCallBack 如何使用")]),t._v(" "),a("p",[t._v("用途就是为了缓存一些变量和函数")]),t._v(" "),a("h2",{attrs:{id:"运行时框架性能有损耗-该怎么优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行时框架性能有损耗-该怎么优化"}},[t._v("#")]),t._v(" 运行时框架性能有损耗，该怎么优化")]),t._v(" "),a("h2",{attrs:{id:"写组件库的时候需要注意什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写组件库的时候需要注意什么"}},[t._v("#")]),t._v(" 写组件库的时候需要注意什么")]),t._v(" "),a("h2",{attrs:{id:"小程序跨到端框架-为什么会有运行时方案的产生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小程序跨到端框架-为什么会有运行时方案的产生"}},[t._v("#")]),t._v(" 小程序跨到端框架：为什么会有运行时方案的产生")]),t._v(" "),a("h2",{attrs:{id:"axios-如何做到统一-node、浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#axios-如何做到统一-node、浏览器"}},[t._v("#")]),t._v(" axios 如何做到统一 node、浏览器")]),t._v(" "),a("p",[t._v("node：http\n浏览器：xhr\nnode 使用 fetch 未来")]),t._v(" "),a("h2",{attrs:{id:"大文件下载暂停"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大文件下载暂停"}},[t._v("#")]),t._v(" 大文件下载暂停")]),t._v(" "),a("h2",{attrs:{id:"计算首屏时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算首屏时间"}},[t._v("#")]),t._v(" 计算首屏时间")]),t._v(" "),a("p",[t._v("performance\nfcp\n白屏、首屏")]),t._v(" "),a("h2",{attrs:{id:"immer-js-学习笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immer-js-学习笔记"}},[t._v("#")]),t._v(" immer.js 学习笔记")]),t._v(" "),a("p",[t._v("https://www.jianshu.com/p/8970a820c148")])])}),[],!1,null,null,null);s.default=n.exports}}]);