(window.webpackJsonp=window.webpackJsonp||[]).push([[269],{728:function(t,s,a){"use strict";a.r(s);var n=a(35),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react的diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react的diff算法"}},[t._v("#")]),t._v(" React的diff算法")]),t._v(" "),a("p",[t._v("Fiber 是链表格式的虚拟dom\n")]),t._v(" "),a("p",[a("strong",[t._v("为什么是 fiber？")]),t._v("\n以前的虚拟 dom 是数组。因为 js 是单线程，有些操作比较耗时间，为了满足浏览器渲染不卡顿，所以区分为高优先级和低优先级任务，高优先级的先执行（动画、点击、输入等），然后再执行优先级低的。链表有指针，中断操作后，方便返回继续操作。")]),t._v(" "),a("h3",{attrs:{id:"react15-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react15-x"}},[t._v("#")]),t._v(" React15.x")]),t._v(" "),a("p",[t._v("React15 时代，没有响应式，数据变了，整个新数据和老的数据做 diff，算出差异就知道怎么去修改 dom 了，就像老李指挥室有一个模型，每次人事变更，通过对比所有人前后差异，就知道了变化，看起来有很多计算量，但是这种 immutable 的数据结构对大型项目比较友好，而且 Vdom 抽象成功后，换成别的平台 render 成为了可能，无论是打鬼子还是打国军，都用一个 vdom 模式碰到的问题一样，如果 dom 节点持续变多，每次 diff 的时间超过了 16ms，就可能会造成卡顿（60fps）")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://198.52.110.135/images/diff/6.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"react-16-fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-16-fiber"}},[t._v("#")]),t._v(" React 16 Fiber")]),t._v(" "),a("p",[t._v("React 走了另外一条路，既然主要问题是 diff 导致卡顿，于是 React 走了类似 cpu 调度的逻辑，把 vdom 这棵树，微观变成了链表，利用浏览器的空闲时间来做 diff，如果超过了 16ms，有动画或者用户交互的任务，就把主进程控制权还给浏览器，等空闲了继续，特别像等待女神的备胎")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://198.52.110.135/images/diff/8.png",alt:""}})]),t._v(" "),a("p",[t._v("diff 的逻辑，变成了单向的链表，任何时候主线程女神有空了，我们在继续蹭上去接盘做 diff，大家研究下 requestIdleCallback 就知道，从浏览器角度看是这样的")]),t._v(" "),a("p",[a("img",{attrs:{src:"http://198.52.110.135/images/diff/9.png",alt:""}})]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestIdelCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myNonEssentialWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等待女神空闲")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myNonEssentialWork")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("deadline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// deadline.timeRemaining()>0 主线程女神还有事件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还有diff任务就不结束")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deadline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeRemaining")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doWorkIfNeeded")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 女神没时间了，把女神还回去")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("       \n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestIdleCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myNonEssentialWork"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("blockquote",[a("p",[t._v("作者：蜗牛老湿-大圣\n链接：https://zhuanlan.zhihu.com/p/135214155\n来源：知乎")])])])}),[],!1,null,null,null);s.default=e.exports}}]);