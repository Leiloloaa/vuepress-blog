(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{590:function(s,n,a){"use strict";a.r(n);var e=a(21),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),a("p",[s._v("Nginx 是一个高性能的 HTTP 和反向代理 web服务器，同时也提供了 IMAP/POP3/SMTP 服务。\n")]),s._v(" "),a("blockquote",[a("p",[s._v("Nginx 的作用相当于 Apache 、IIS和 Tomcat；经过简单的并发测试，在20000个并发链接时，CPU 和内存占用也非常低，CPU 仅占5%，内存占用也才2MB不到。可见其的高性能；Nginx 的三大主要功能：静态web服务器、反向代理、负载均衡；")])]),s._v(" "),a("h2",{attrs:{id:"常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("nginx -s reopen  #重启Nginx\nnginx -s reload  #重新加载Nginx配置文件，然后以优雅的方式重启Nginx\nnginx -s stop    #强制停止Nginx服务\nnginx -s quit    #优雅地停止Nginx服务（即处理完所有请求后再停止服务）\nnginx -h       #打开帮助信息\nnginx -v       #显示版本信息并退出\nnginx -V      #显示版本和配置选项信息，然后退出\nnginx -t      #检测配置文件是否有语法错误，然后退出\nnginx -T       #检测配置文件是否有语法错误，转储并退出\nnginx -q         #在检测配置文件期间屏蔽非错误信息\nnginx -p prefix    #设置前缀路径(默认是:/usr/share/nginx/)\nnginx -c filename #设置配置文件(默认是:/etc/nginx/nginx.conf)\nnginx -g directives #设置配置文件外的全局指令\nkillall nginx  #杀死所有nginx进程\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置文件"}},[s._v("#")]),s._v(" 配置文件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# nginx进程数，建议设置为等于CPU总核心数\nworker_processes  1;\n# 进程文件\npid        logs/nginx.pid;\n# 单个进程最大连接数\nevents {\n    worker_connections  1024;\n}\nhttp {\n    # 文件扩展名与类型映射表\n    include       mime.types;\n    # 默认文件类型\n    default_type  application/octet-stream;\n    # 开启gzip压缩\n    gzip  on;\n    sendfile        on;\n    keepalive_timeout  65;\n    server {\n        # 监听端口\n        listen       80;\n        server_name  localhost;\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[s._v("#")]),s._v(" 反向代理")]),s._v(" "),a("ul",[a("li",[s._v("什么是代理")])]),s._v(" "),a("blockquote",[a("p",[s._v("代理其实就是一个中介，A和B本来可以直连，中间插入一个C，C就是中介")])]),s._v(" "),a("ul",[a("li",[s._v("正向代理")])]),s._v(" "),a("blockquote",[a("p",[s._v("正向代理类似一个跳板机，代理访问外部资源；比如我们国内访问谷歌，直接访问访问不到，我们可以通过一个正向代理服务器，请求发到代理服，代理服务器能够访问谷歌，这样由代理去谷歌取到返回数据，再返回给我们，这样我们就能访问谷歌了\n正向代理的用途：（1）访问原来无法访问的资源，如google（2）可以做缓存，加速访问资源（3）对客户端访问授权，上网进行认证（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息\n"),a("img",{attrs:{src:"https://images.dbabox.ltd/images/2021/03/15/image25d68bb79a84c21c.png",alt:"image25d68bb79a84c21c.png"}})])]),s._v(" "),a("ul",[a("li",[s._v("反向代理")])]),s._v(" "),a("blockquote",[a("p",[s._v("反向代理（Reverse Proxy）实际运行方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个服务器\n反向代理的作用：（1）保证内网的安全，阻止web攻击，大型网站，通常将反向代理作为公网访问地址，Web服务器是内网（2）负载均衡，通过反向代理服务器来优化网站的负载\n"),a("img",{attrs:{src:"https://images.dbabox.ltd/images/2021/03/15/imageda65649499065f90.png",alt:"imageda65649499065f90.png"}})])]),s._v(" "),a("ul",[a("li",[s._v("总结\n"),a("ul",[a("li",[s._v("正向代理: "),a("code",[s._v("买票的黄牛")]),s._v("、"),a("code",[s._v("翻墙")]),s._v("、「代理客户端」，服务端不知道实际发起请求的客户端。")]),s._v(" "),a("li",[s._v("反向代理: "),a("code",[s._v("租房的代理")]),s._v("、"),a("code",[s._v("Nginx 反向代理服务器")]),s._v("、「代理服务端」，客户端不知道实际提供服务的服务端。")])])])]),s._v(" "),a("h3",{attrs:{id:"nginx-配置反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置反向代理"}},[s._v("#")]),s._v(" Nginx 配置反向代理")]),s._v(" "),a("p",[s._v("反向代理不需要额外的模块，默认自带"),a("code",[s._v("proxy_pass")]),s._v("和"),a("code",[s._v("fastcgi_pass")]),s._v("指令，通过在"),a("code",[s._v("location")]),s._v("块中配置即可实现：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n  listen 80;\n  server_name a.com;\n  location / {\n    proxy_pass http://192.168.1.1:8080;\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[s._v("#")]),s._v(" 负载均衡")]),s._v(" "),a("p",[s._v("随着互联网的发展，用户规模的增加，服务器的压力也越来越大，如果只使用一台服务器有时候不能承受流量的压力，这时我们就需要将部分流量分散到多台服务器上，使得每台服务器都均衡的承担压力。")]),s._v(" "),a("p",[s._v("nginx 负载均衡目前支持六种策略："),a("code",[s._v("轮询策略")]),s._v("、"),a("code",[s._v("加权轮询策略")]),s._v("、"),a("code",[s._v("ip_hash策略")]),s._v("、"),a("code",[s._v("url_hash策略")]),s._v("、"),a("code",[s._v("fair策略")]),s._v("和"),a("code",[s._v("sticky策略")]),s._v("；六种策略可以分为两大类，内置策略（轮询、加权轮询、ip_hash）和扩展策略（url_hash、fair、sticky）；默认情况下内置策略自动编译在 Nginx 中，而扩展策略需要额外安装。")]),s._v(" "),a("h3",{attrs:{id:"轮询策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#轮询策略"}},[s._v("#")]),s._v(" 轮询策略")]),s._v(" "),a("p",[s._v("就是按照请求顺序，逐一分配到不同的服务器节点；如果某台服务器出现问题，会自动剔除。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("upstream myserver {\n    server 192.168.1.101:8080;\n    server 192.168.1.101:8081;\n    server 192.168.1.101:8082;\n}\nserver {\n    listen      8070;\n    server_name _;\n    location / {\n        proxy_pass http://myserver;\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h3",{attrs:{id:"加权轮询策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加权轮询策略"}},[s._v("#")]),s._v(" 加权轮询策略")]),s._v(" "),a("p",[s._v("加权轮询在基本轮询策略上考虑各服务器节点接受请求的权重，指定服务器节点被轮询的权重，主要用于服务器节点性能不均的情况；weight 默认为1；")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("upstream myserver {\n    server 192.168.1.101:8080;\n    server 192.168.1.101:8081 weight=3;\n    server 192.168.1.101:8082 weight=2;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);