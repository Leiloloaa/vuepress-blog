(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{532:function(t,s,a){"use strict";a.r(s);var n=a(21),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试记录一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试记录一"}},[t._v("#")]),t._v(" 面试记录一")]),t._v(" "),a("h2",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("h3",{attrs:{id:"讲讲js数据类型-基本和引用的区别-symbol和bigint讲一讲应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲讲js数据类型-基本和引用的区别-symbol和bigint讲一讲应用场景"}},[t._v("#")]),t._v(" 讲讲js数据类型？基本和引用的区别？symbol和bigint讲一讲应用场景？")]),t._v(" "),a("blockquote",[a("p",[t._v("js的基本类型有7种，分别是 Number String Boolean Undefined Null Symbol（ES6） 和 Bigint（ES2020）；引用类型是 Object 以及其一些子类型 Array 等；基本数据类型在内存栈中存放的是连续的地址；而引用数据类型是值存放在堆内存中，而它的索引存在栈中；Symbol 是唯一标识符的意思，常用于替代常量 const TYPE_AUDIO = Symbol()或者使用Symbol定义类的私有属性/方法；BigInt 可以表示任意大的整数；")])]),t._v(" "),a("h3",{attrs:{id:"判断数据类型的方法-instanceof原理-判断空对象-typeof-null-typeof-nan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断数据类型的方法-instanceof原理-判断空对象-typeof-null-typeof-nan"}},[t._v("#")]),t._v(" 判断数据类型的方法？instanceof原理? 判断空对象？ typeof null？typeof NaN？")]),t._v(" "),a("blockquote",[a("p",[t._v("instanceof 和 typeof；instanceof 的原理是判断左边的原型链和右边的原型链是否相同；typeof null 会是 Object，因为这是 javascript 一开始的设计 bug ， null 代表的是空指针，类型标签也成为了 0，而对象的类型标签是 0；typeof NaN 返回的是 Number；")])]),t._v(" "),a("h3",{attrs:{id:"var-let-const-区别-暂时性死区-块级作用域-const-a-a-x-1-能不能修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const-区别-暂时性死区-块级作用域-const-a-a-x-1-能不能修改"}},[t._v("#")]),t._v(" var/let/const 区别？暂时性死区？块级作用域？const a = {}; a.x = 1 能不能修改？")]),t._v(" "),a("blockquote",[a("p",[t._v("使用 var 声明变量，变量会在预编译阶段提升，而 let 和 const 则不会；它们会生成暂时性死区，一定要给变量赋值才能引用，不让会报错；块级作用域的范围是这一代码块的的作用域；能修改，但是不能给 a 重新赋值；")])]),t._v(" "),a("h3",{attrs:{id:"说说你对函数式编程的理解-函数柯里化的理解-平时的使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说你对函数式编程的理解-函数柯里化的理解-平时的使用场景"}},[t._v("#")]),t._v(" 说说你对函数式编程的理解？函数柯里化的理解？平时的使用场景？")]),t._v(" "),a("blockquote",[a("p",[t._v("函数式编程就是一切都是函数，这样更灵活，一切的api都是由函数组成，模块化；函数柯里化的意思是接收一部分参数，返回一个函数接收剩余参数，接收足够的参数后，执行原函数；")])]),t._v(" "),a("h3",{attrs:{id:"防抖、节流的含义-使用场景-手写一下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖、节流的含义-使用场景-手写一下"}},[t._v("#")]),t._v(" 防抖、节流的含义，使用场景？手写一下？")]),t._v(" "),a("blockquote",[a("p",[t._v("防抖：对于短时间内连续触发的事件（滚动事件），防抖的含义就是让某个时间期限（1000毫秒）内，事件处理函数只执行一次。节流：在函数执行一次之后，该函数在指定的时间期限内不再工作，直至过了这段时间才重新生效。")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("防抖")]),t._v(" 基于上述场景，首先提出第一种思路：在第一次触发事件时，不立即执行函数，而是给出一个期限值比如200ms，然后：如果在200ms内没有再次触发滚动事件，那么就执行函数如果在200ms内再次触发滚动事件，那么当前的计时取消，重新开始计时效果：如果短时间内大量触发同一事件，只会执行一次函数。实现：既然前面都提到了计时，那实现的关键就在于setTimeout这个函数，由于还需要一个变量来保存计时，考虑维护全局纯净，可以借助闭包来实现")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("节流")]),t._v(" 继续思考，使用上面的防抖方案来处理问题的结果是：如果在限定时间段内，不断触发滚动事件（比如某个用户闲着无聊，按住滚动不断的拖来拖去），只要不停止触发，理论上就永远不会输出当前距离顶部的距离。但是如果产品同学的期望处理方案是：即使用户不断拖动滚动条，也能在某个时间间隔之后给出反馈呢？效果：如果短时间内大量触发同一事件，那么在函数执行一次之后，该函数在指定的时间期限内不再工作，直至过了这段时间才重新生效。\n实现 这里借助setTimeout来做一个简单的实现，加上一个状态位valid来表示当前函数是否处于工作状态")])]),t._v(" "),a("h3",{attrs:{id:"call、apply、bind区别-bind实现-bind之后还能修改this指向吗-为什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind区别-bind实现-bind之后还能修改this指向吗-为什么"}},[t._v("#")]),t._v(" call、apply、bind区别？bind实现？bind之后还能修改this指向吗？为什么？")]),t._v(" "),a("blockquote",[a("p",[t._v("功能相同，都是改变 this 的指向；在 es5 中 this 的指向永远是指向最后调用它的那个对象；apply 和 call 的区别是 call 方法接受的是若干个参数列表，而 apply 接收的是一个包含多个参数的数组；而 bind 是创建一个新的函数，我们必须要手动去调用；bind之后不能修改this指向，因为在调用方法的时候本质上相当于window.fn，若再改变 this，那么 bind 的意义就不大了；")])]),t._v(" "),a("h3",{attrs:{id:"闭包概念-最主要的还是问闭包的场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包概念-最主要的还是问闭包的场景"}},[t._v("#")]),t._v(" 闭包概念，最主要的还是问闭包的场景？")]),t._v(" "),a("blockquote",[a("p",[t._v("闭包就是能够读取其他函数内部变量的函数；函数防抖、回调函数中用的比较多；闭包常常用来「间接访问一个变量」 ，外部能够访问到函数内部的变量；")])]),t._v(" "),a("h3",{attrs:{id:"用es5实现es6类的继承-各种继承问的挺多的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用es5实现es6类的继承-各种继承问的挺多的"}},[t._v("#")]),t._v(" 用es5实现es6类的继承？各种继承问的挺多的")]),t._v(" "),a("h3",{attrs:{id:"深拷贝与浅拷贝-常用方法-手写一个深拷贝函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝与浅拷贝-常用方法-手写一个深拷贝函数"}},[t._v("#")]),t._v(" 深拷贝与浅拷贝？常用方法？手写一个深拷贝函数？")]),t._v(" "),a("blockquote",[a("p",[t._v("深拷贝会复制对象的本身，会另开辟一个空间存放复制后的新对象，浅拷贝则只复制对象的引用，也就是一个地址；\n浅拷贝常用方法：for···in只循环第一层、Object.assign方法、= 号赋值\n深拷贝常用方法：采用递归去拷贝所有层级属性、通过JSON对象来实现深拷贝等等")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleCopy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" objClone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断ojb子元素是否为对象，如果是，递归复制")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    objClone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果不是，简单复制")]),t._v("\n                    objClone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" objClone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    objClone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" objClone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JSON 序列化 缺点： 无法实现对对象中方法的深拷贝，会显示为undefined")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("h3",{attrs:{id:"说说你知道的javascript设计模式-观察者和发布订阅的区别-手写一个发布订阅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说你知道的javascript设计模式-观察者和发布订阅的区别-手写一个发布订阅"}},[t._v("#")]),t._v(" 说说你知道的JavaScript设计模式？观察者和发布订阅的区别？手写一个发布订阅？")]),t._v(" "),a("blockquote",[a("p",[t._v("工厂模式、观察者模式、发布订阅模式、委托模式、链式调用；观察者模式，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新；发布订阅模式，侧重点在于订阅者订阅事件，发布者发布信息，至于订阅者接受信息之后的处理并不关心；观察者模式是一种紧耦合的状态，而发布/订阅模式是一种松耦合的状态。")])]),t._v(" "),a("h3",{attrs:{id:"说说对你对javascript异步编程的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说说对你对javascript异步编程的理解"}},[t._v("#")]),t._v(" 说说对你对JavaScript异步编程的理解？")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript 是单线程的，但是由于存在事件循环，可实现异步编程；在编译的过程中，为了不阻塞进程，将一些特殊的宏任务和微任务放入事件队列中，等待同步事件处理完，再根据优先级处理异步事件；")])]),t._v(" "),a("h3",{attrs:{id:"es-module与-commonjs-模块的差异-两者互相加载的方式-一般会扯到amd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es-module与-commonjs-模块的差异-两者互相加载的方式-一般会扯到amd"}},[t._v("#")]),t._v(" ES Module与 CommonJS 模块的差异？两者互相加载的方式？一般会扯到AMD")]),t._v(" "),a("blockquote",[a("p",[t._v("commonJS模块输入的是一个"),a("strong",[t._v("值的拷贝")]),t._v("，ES6模块输出的是"),a("strong",[t._v("值的引用")]),t._v("（所以重新对其赋值）；commonJS模块是"),a("strong",[t._v("运行时加载（同步")]),t._v("），ES6模块是"),a("strong",[t._v("编译时输出接口（异步）")]),t._v("；AMD异步，解决了Commonjs的同步阻塞问题；")])]),t._v(" "),a("blockquote",[a("p",[t._v("ES Module 之所以能 Tree-shaking 主要有四个原因：1、import 只能作为模块顶层的语句出现，不能出现在 function 里面或者是 if 里面；2、import 的模块名只能是字符串常量；3、不管 import 的语句出现的位置在哪里，在模块初始化的时候所有的 import 都必须已导入完成；4、import binding 是 immutable 的，不可修改的；")])]),t._v(" "),a("blockquote",[a("p",[t._v("Tree-shaking 的含义就是只导入所需要的")])]),t._v(" "),a("h3",{attrs:{id:"promise-all、race、allsettled-概念、手写-很多手写题都会用到-比如用promise实现请求并发个数限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-all、race、allsettled-概念、手写-很多手写题都会用到-比如用promise实现请求并发个数限制"}},[t._v("#")]),t._v(" Promise.all、race、allSettled 概念、手写？很多手写题都会用到，比如用promise实现请求并发个数限制？")]),t._v(" "),a("h2",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("h3",{attrs:{id:"水平垂直居中-兼容性-不知道宽高情况下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中-兼容性-不知道宽高情况下"}},[t._v("#")]),t._v(" 水平垂直居中？兼容性？不知道宽高情况下？")]),t._v(" "),a("blockquote",[a("p",[t._v("position absolute left top -50% 或者 translate 偏移；display：flex；just-content：center；align-item：center；")])]),t._v(" "),a("h3",{attrs:{id:"bfc概念-作用-常用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc概念-作用-常用场景"}},[t._v("#")]),t._v(" BFC概念？作用？常用场景？")]),t._v(" "),a("h3",{attrs:{id:"flex-注意flex-1的含义-一般会给你个场景题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-注意flex-1的含义-一般会给你个场景题"}},[t._v("#")]),t._v(" Flex？注意flex：1的含义，一般会给你个场景题")]),t._v(" "),a("blockquote",[a("p",[t._v("flex 后面有三个参数")])]),t._v(" "),a("h3",{attrs:{id:"盒模型概念-如何切换盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型概念-如何切换盒模型"}},[t._v("#")]),t._v(" 盒模型概念，如何切换盒模型？")]),t._v(" "),a("blockquote",[a("p",[t._v("有两种盒模型，一种 IE盒模型 内容 = width + margin + padding；而正常盒模型 内容 = width；通过 border-size\n实现1px边框？1px线条？")])]),t._v(" "),a("h3",{attrs:{id:"伪类和伪元素区别-使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类和伪元素区别-使用场景"}},[t._v("#")]),t._v(" 伪类和伪元素区别？使用场景？")]),t._v(" "),a("blockquote",[a("p",[t._v("伪元素一般在清楚浮动的时候使用")])]),t._v(" "),a("h2",{attrs:{id:"http-浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-浏览器"}},[t._v("#")]),t._v(" Http && 浏览器")]),t._v(" "),a("h3",{attrs:{id:"浏览器缓存-http缓存-主要要讲一讲强缓存、协商缓存、preload、prefetch、service-worker等-304的含义-协商缓存e-tag是怎么生成的-last-modified是基于什么生成的-两者对比一下-优先级哪个高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存-http缓存-主要要讲一讲强缓存、协商缓存、preload、prefetch、service-worker等-304的含义-协商缓存e-tag是怎么生成的-last-modified是基于什么生成的-两者对比一下-优先级哪个高"}},[t._v("#")]),t._v(" 浏览器缓存？http缓存？ 主要要讲一讲强缓存、协商缓存、preload、prefetch、Service Worker等，304的含义？协商缓存e-tag是怎么生成的？Last-Modified是基于什么生成的？两者对比一下？优先级哪个高？")]),t._v(" "),a("blockquote"),t._v(" "),a("h3",{attrs:{id:"什么是跨域-什么情况下会跨域-浏览器根据什么字段判断是否允许跨域-跨域的解决方案有哪些-options请求了解过吗-说说cors中的简单请求和复杂请求-form表单提交会跨域吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域-什么情况下会跨域-浏览器根据什么字段判断是否允许跨域-跨域的解决方案有哪些-options请求了解过吗-说说cors中的简单请求和复杂请求-form表单提交会跨域吗"}},[t._v("#")]),t._v(" 什么是跨域？什么情况下会跨域？浏览器根据什么字段判断是否允许跨域？跨域的解决方案有哪些？options请求了解过吗？说说CORS中的简单请求和复杂请求？form表单提交会跨域吗？")]),t._v(" "),a("blockquote",[a("p",[t._v("根据 http 协议的同源策略影响，只有在相同的域名、协议的情况下才不会跨域；浏览器根据 CORS 字段来判断是否允许跨域")])]),t._v(" "),a("h3",{attrs:{id:"讲一讲浏览器事件循环event-loop-node-事件循环描述一下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#讲一讲浏览器事件循环event-loop-node-事件循环描述一下"}},[t._v("#")]),t._v(" 讲一讲浏览器事件循环Event Loop？node 事件循环描述一下？")]),t._v(" "),a("h3",{attrs:{id:"http2有哪些新特性-http2还有哪些缺陷-http3的一些了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2有哪些新特性-http2还有哪些缺陷-http3的一些了解"}},[t._v("#")]),t._v(" http2有哪些新特性？http2还有哪些缺陷？http3的一些了解？")]),t._v(" "),a("h3",{attrs:{id:"从输入-url-到页面加载完成的过程-一般要很详细的描述-包括dns查询-缓存查询-3次握手-4次挥手-浏览器渲染进程等-面试官会从里面再挑几个问题深入问-比如为什么是3次握手4次挥手-渲染进程中的gui渲染线程、js引擎线程、事件触发线程等等-可能会问到进程线程的区别-浏览器为什么是多进程-js为什么是单线程-怎么支持多线程-等等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从输入-url-到页面加载完成的过程-一般要很详细的描述-包括dns查询-缓存查询-3次握手-4次挥手-浏览器渲染进程等-面试官会从里面再挑几个问题深入问-比如为什么是3次握手4次挥手-渲染进程中的gui渲染线程、js引擎线程、事件触发线程等等-可能会问到进程线程的区别-浏览器为什么是多进程-js为什么是单线程-怎么支持多线程-等等"}},[t._v("#")]),t._v(" 从输入 URL 到页面加载完成的过程，一般要很详细的描述：包括DNS查询，缓存查询，3次握手，4次挥手，浏览器渲染进程等，面试官会从里面再挑几个问题深入问，比如为什么是3次握手4次挥手？渲染进程中的GUI渲染线程、JS引擎线程、事件触发线程等等？可能会问到进程线程的区别？浏览器为什么是多进程？js为什么是单线程？怎么支持多线程？等等")]),t._v(" "),a("h3",{attrs:{id:"https加密原理-主要是讲对称加密和非对此加密结合使用的一个过程。什么是中间人攻击-和http区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#https加密原理-主要是讲对称加密和非对此加密结合使用的一个过程。什么是中间人攻击-和http区别"}},[t._v("#")]),t._v(" https加密原理？主要是讲对称加密和非对此加密结合使用的一个过程。什么是中间人攻击？和http区别？")]),t._v(" "),a("h2",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("p",[t._v("生命周期？那个生命周期可以获取到真实DOM？修改data里面的数据，会触发什么生命周期？\n组件data为什么是一个函数？\nvue 组件通信？一般说了vuex，就会问vuex用法？action和mutations区别？实现原理等？\nvue 导航守卫，分全局和组件的，一般用于权限控制，这个就可能扯到项目中的一些鉴权问题。\n$nextTick 作用？实现原理？微任务向宏任务的降级处理，经常被问到说出几种宏任务，微任务。\nvue响应式原理？基本都会问\nvue scoped属性作用？实现原理？\nvue router有几种模式？实现方式？\nkey的作用？没有key的情况，vue会怎么做？会引出diff的问题\nvue diff过程，和react diff区别？\nvue 2.x defineProperty缺陷？业务代码里面怎么处理？$set原理？vue是怎么重写数组方法的？考察你是不是真的看过源码\nvue 3.0 proxy优缺点？怎么处理vue3不支持IE？\ncomputed 和 watch 的区别和运用的场景？除了基本的，看你能不能说出三种watcher的区别")]),t._v(" "),a("h2",{attrs:{id:"react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),a("p",[t._v("生命周期详细描述一下？官方为什么改变？\n说说你对虚拟DOM的理解？直接全量更新和diff哪个快（这个问题要分情况）？\n什么是HOC？React里面用过哪些？可能让你实现一个add(1)(2)(3)的函数\nFiber干了什么事情？requestIdleCallback了解多少？\nreact性能优化？\nhooks出现的意义？类组件和函数组件之间的区别是什么？\n为什么不要在循环、条件语句或者嵌套函数中调用hooks？记住官网的一句话，Not Magic, just Arrays\nsetState 同步还是异步？比较常问，问的可能也比较深入\n如何避免组件的重新渲染？memo/useMemo、PureComponent？useMemo和useCallback区别？")]),t._v(" "),a("p",[t._v("拉钩之前有个一块钱的课【深入浅出搞定 React】修言大佬的课，有兴趣的可以去看看（也可以借号🤓）")]),t._v(" "),a("p",[t._v("6、其他\n简历写的了解，问的很少。即使现在公司用node做中间层，也基本没问node的问题，所以这块我就简单写写")]),t._v(" "),a("p",[t._v("常用的一些模块，fs/path/http等等\nEventEmitter 概念，使用场景，错误捕获\nStream 概念？使用场景？常见的Stream？")]),t._v(" "),a("p",[t._v("webpack基本也是必问，得系统学习一下")]),t._v(" "),a("p",[t._v("webpack 构建流程？打包原理？\n项目中做的一些优化？\nloader和plugin的区别？有没有写过？常用哪些loader和plugin\nwebpack热跟新原理？\ntree-shaking？对于 CommonJS，tree shaking怎么办？\nwebpack loader的执行顺序？从左到右？从上到下？")]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h3",{attrs:{id:"项目做过的一些性能优化-基本必问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#项目做过的一些性能优化-基本必问"}},[t._v("#")]),t._v(" 项目做过的一些性能优化，基本必问")]),t._v(" "),a("blockquote",[a("p",[t._v("图片懒加载（利用UI框架的组件）、合理的利用 v-if 和 v-show、组件的复用、减少对闭包的使用、静态资源的缓存、服务端开启 gzip 压缩、 ssr渲染")])]),t._v(" "),a("h3",{attrs:{id:"长列表渲染怎么优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长列表渲染怎么优化"}},[t._v("#")]),t._v(" 长列表渲染怎么优化？")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("虚拟列表")]),t._v("是一个有效的设计思路。即"),a("strong",[t._v("永远只渲染当前用户可见，以及其前后的几个元素")]),t._v("。监听滑动事件 (scroll event)，在滑动的时候调整当前窗口的可见元素，并渲染出来。这样可以大大节约插入和移除大量 DOM 元素的时间，可以大大加快初次渲染时间，而且渲染时间不随着数据量增加而增加。")])]),t._v(" "),a("h3",{attrs:{id:"各种懒加载的实现原理-路由-图片"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各种懒加载的实现原理-路由-图片"}},[t._v("#")]),t._v(" 各种懒加载的实现原理？路由？图片？")]),t._v(" "),a("h3",{attrs:{id:"typescript-中的-interface-和-type-到底有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript-中的-interface-和-type-到底有什么区别"}},[t._v("#")]),t._v(" Typescript 中的 interface 和 type 到底有什么区别")]),t._v(" "),a("blockquote",[a("p",[t._v("type的作用是给类型生成一个新的别名。而interface的作用是定义一组具体的对象。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);